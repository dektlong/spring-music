jobs:
  - name: unit-test
    plan:
    - get: git-repo
      trigger: true
    - task: unit
      file: git-repo/ci/tasks/unit.yml

  - name: build-RockMe
    serial_groups: [version]
    serial: true
    plan:
    - get: git-repo
      passed: [unit-test]
      trigger: true
    - get: version
      params: { pre: rc }
    - task: build-RockMe
      file: git-repo/ci/tasks/build-artifact.yml
      timeout: 5m
    - put: release-candidate
      params:
        file: artifact-dir/spring-music*.war
    #- put: git-repo
    #  params:
    #    repository: git-repo
    #    tag: version/number
    - put: version
      params: {file: version/number}

  - name: TEST-RockMe
    serial_groups: [version]
    plan:
    - aggregate:
      - get: version
        passed: [build-RockMe]
        trigger: true
      - get: release-candidate
        passed: [build-RockMe]
      - get: git-repo
        passed: [build-RockMe]
    - put: TAS-TEST-CLOUD
      params:
        manifest: git-repo/manifest-test.yml
        current_app_name: rockme
        path: release-candidate/spring-music*.war
    #- task: verify
    #  file: git-repo/ci/tasks/verify-test.yml
    #  params:
     #   CONCOURSE_DEMO_URL: {{CONCOURSE_URL}}

  - name: UAT-RockMe
    serial_groups: [version]
    plan:
    - aggregate:
      - get: release-candidate
        passed: [TEST-RockMe]
        trigger: true
      - get: version
        passed: [TEST-RockMe]
      - get: git-repo
        passed: [TEST-RockMe]
    - put: TAS-UAT-CLOUD
      params:
        manifest: git-repo/manifest-uat.yml
        current_app_name: rockme
        path: release-candidate/spring-music*.war

  - name: SHIP-RockMe
    serial_groups: [version]
    serial: true
    plan:
    - aggregate:
      - get: release-candidate
        passed: [UAT-RockMe]
      - get: version
        params: { bump: final }
        passed: [UAT-RockMe]
      - get: git-repo
        passed: [UAT-RockMe]
    - task: prepare-final
      file: git-repo/ci/tasks/prepare-final.yml
      params:
        base_name: spring-music
    - put: production-release
      params:
        file: final-dir/spring-music*.war
    - put: TAS-PRODUCTION-CLOUD
      params:
        manifest: git-repo/manifest-prod.yml
        current_app_name: rockme
        path: final-dir/spring-music*.war

  - name: major
    serial_groups: [ version ]
    plan:
      - put: version
        params: { bump: major, pre: rc }

  - name: minor
    serial_groups: [ version ]
    plan:
      - put: version
        params: { bump: minor, pre: rc }

  - name: patch-RockMe
    serial_groups: [ version ]
    plan:
      - get: version
        passed: [ SHIP-RockMe ]
        trigger: true
      - put: version
        params: { bump: patch-RockMe }

resources:
- name: git-repo
  type: git
  check_every: 1s
  source:
    uri: {{GIT_REPO}}
    branch: master
    
- name: TAS-TEST-CLOUD
  type: cf
  source:
    api: {{TAS_TEST_API}}
    username: {{TAS_TEST_USER}}
    password: {{TAS_TEST_PASS}}
    organization: {{TAS_TEST_ORG}}
    space: {{TAS_TEST_SPACE}}
    skip_cert_check: true

- name: TAS-UAT-CLOUD
  type: cf
  source:
    api: {{TAS_UAT_API}}
    username: {{TAS_UAT_USER}}
    password: {{TAS_UAT_PASS}}
    organization: {{TAS_UAT_ORG}}
    space: {{TAS_UAT_SPACE}}
    skip_cert_check: true

- name: TAS-PRODUCTION-CLOUD
  type: cf
  source:
    api: {{TAS_PROD_API}}
    username: {{TAS_PROD_USER}}
    password: {{TAS_PROD_PASS}}
    organization: {{TAS_PROD_ORG}}
    space: {{TAS_PROD_SPACE}}
    skip_cert_check: true

- name: version
  type: semver
  source:
    bucket: {{S3_BUCKET}}
    key: {{S3_VERSION_FILE}}
    access_key_id: {{S3_ACCESS_KEY_ID}}
    secret_access_key: {{S3_SECRET_ACCESS_KEY}}
    initial_version: 1.0.0

- name: release-candidate
  type: s3
  source:
    bucket: {{S3_BUCKET}}
    regexp: {{S3_PIPELINE_ARTIFACTS}}
    access_key_id: {{S3_ACCESS_KEY_ID}}
    secret_access_key: {{S3_SECRET_ACCESS_KEY}}

- name: production-release
  type: s3
  source:
    bucket: {{S3_BUCKET}}
    regexp: {{S3_DEPLOYMENTS}}
    access_key_id: {{S3_ACCESS_KEY_ID}}
    secret_access_key: {{S3_SECRET_ACCESS_KEY}}
